version: '3.8'
services:
    app:
        depends_on:
            - db
        build:
            context: .
            dockerfile: Dockerfile
        image: laravel-api:latest
        container_name: laravel-api
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - laravel

    webserver:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - laravel

    db:
        image: mysql:5.7
        platform: linux/amd64 # Adicionado para especificar a plataforma
        container_name: mysql
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - laravel
#    env_tester:
#        image: busybox
#        command: [ "sh", "-c", "env" ]
#        environment:
#            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#            MYSQL_DATABASE: ${MYSQL_DATABASE}
#            MYSQL_USER: ${MYSQL_USER}
#            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    env_tester:
        image: alpine
        command: [ "sh", "-c", "env" ]
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}

volumes:
    dbdata:
        driver: local

networks:
    laravel:
        driver: bridge
